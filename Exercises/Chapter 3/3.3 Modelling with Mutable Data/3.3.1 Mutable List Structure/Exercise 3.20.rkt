#lang sicp                                                                                
|-------------------------------------------------|<-------------------------------------------------------------------------------|-------------------------------| (cdr z)
| cons: -|     set-car!:...      car:...          |                                                                                | z: z                          |
| x: -|  |     set-cdr!:...      cdr:...          |<-----------------------------------------------------------------------|       |-------------------------------|
| z: ----|------------------------------------|   |           (define x (cons 1 2))                                        |
   ---| -|------------------------------------|---|<---------|-------------------------------------------------------|     |-------|-------------------------------------|
   |     |   ^                            ^   |              | x: 1 -> 17                                            |             | z: (cdr z)                          |
   |  |*|*|--|                            |   |              | y: 2                                                  |             | new-value: 17                       |
   |    |                                 |   |              | set-x!: --> obj pair that points back to this env     |             |-------------------------------------| 
   |   param: x, y                        |   |              | set-y!: --> obj pair that points back to this env     |               (set-car! (cdr z) 17)                   
   |   body: (define (set-x! v)...)       |   |              | dispatch: --> obj pair that points back to this env   |                                   (set-x! new-value)  
   |         (define (set-y! v)...)       |   |              |-------------------------------------------------------|                                 |--------------|      
   |         (define (dispatch m)...)     |   |                            ^                                     ^ <-----------------------------------| v: 17        |
   |         dispatch)                    |----------------------------------------------------- |               |              
   |                                          |                            |                     |               |                                     |--------------|
   |                                          |                            |                     |               |-------------------------------------| m: set-car!  |
  |*|*|---------------------------------------|----------------------------|                     |                                                     |--------------|
   |                                          |                                                  |  (define z (cons x x))                               (dispatch 'set-car!)
  param: m                                  |*|*|------------------------------------->|---------|----------------------------------------------|
  body: (cond                                |                                         | x: x                                                   |        |---------------|
          ((eq? m 'car)...)                 param: m                                   | y: x                                                   |<-------| m: 'cdr       |  
          ((eq? m 'cdr)...)                 body: ...                                  | set-x!: --> obj pair that points back to this env      |        |---------------|
          ((eq? m 'set-car!)...)                                                       | set-y!: --> obj pair that points back to this env      |           (dispatch 'cdr)
          ((eq? m 'set-cdr!)...)                                                       | dispatch: --> obj pair that points back to this env    |
          (else...))                                                                   |--------------------------------------------------------|